getwd()
library(igraph)
load("facebook\0.circles")
load("facebook\107.circles")
dat <- read.csv("facebook\107.circles")
dat <- read.csv("facebook/107.circles")
list.files()
list.files("facebook")
View(dat)
rm(list = ls())
for(i in 1:length(files)) assign(data[i], read.csv(data[i]))
for(i in 1:length(data)) assign(data[i], read.csv(data[i]))
data <- list.files("facebook")
rm(list = ls())
data <- list.files("facebook")
for(i in 1:length(data)) assign(data[i], read.csv(data[i]))
rm(list = ls())
data <- list.files("facebook")
for(i in 1:length(data)) assign(data[i], read.csv("facebook/", data[i]))
for(i in 1:length(data)) assign(data[i], read.csv("facebook/"data[i]))
for(i in 1:length(data)) assign(data[i], read.csv("facebook/,"data[i]))
for(i in 1:length(data)) assign(data[i], read.csv(data[i]))
setwd("facebook")
for(i in 1:length(data)) assign(data[i], read.csv(data[i]))
rm(i)
i
data[5]
read.table(data[5])
graph <- graph.adjacency(for (i in 1:length(data)) data [i])
graph <- graph.adjacency(data[5])
graph <- graph.adjacency("0.edges")
graph <- graph.adjacency(data[0])
rm(list = ls())
library(igraph)
data <- list.files("facebook")
setwd("facebook")
for(i in 1:length(data)) assign(data[i], read.csv(data[i]))
-2^2^2
View(`1684.feat`)
getwd()
load("facebook")
m = as.matrix(data[i])
View(m)
rm(list = ls())
setwd("facebook")
for(i in 1:length(data)) assign(data[i], read.csv(data[i], header=TRUE, row.names = 1, check.names = FALSE))
for(i in 1:length(data)) assign(data[i], read.csv(data[i], header=TRUE, row.names = 1, check.names = FALSE))
for(i in 1:length(data)) assign(data[i], read.csv(data[i], header=TRUE, row.names = 1, check.names = FALSE))
for(i in 1:length(data)) assign(data[i], read.csv(data[i]))
data <- list.files("facebook")
for(i in 1:length(data)) assign(data[i], read.csv(data[i], header=TRUE, row.names = 1, check.names = FALSE))
rm(list = ls())
library(igraph)
data <- list.files("facebook")
data
list.files()
rm(list = ls())
data <- list.files()
for(i in 1:length(data)) assign(data[i], read.csv(data[i], header=TRUE, row.names = 1, check.names = FALSE))
m = []
for(i in 1:length(data)) assign(m[i], as.matrix(data[i]))
for(i in 1:length(data)) assign(data[i], as.matrix(data[i]))
View(`698.egofeat`)
View(`698.egofeat`)
View(`698.edges`)
View(`686.featnames`)
rm(list = ls())
data <- list.files()
for(i in 1:length(data)) assign(data[i], read.csv(data[i], header=TRUE, row.names = 1, check.names = FALSE))
View(`0.circles`)
View(`0.circles`)
View(`0.edges`)
View(`107.edges`)
setwd("\..")
setwd("..")
getwd()
nexus.get(facebook)
list.files()
nexus.get(facebook.tar.gz)
graph <- graph.adjacency(data[0])
View(`0.edges`)
View(`1912.feat`)
View(`1912.feat`)
files.show
list.files
list.files()
read.graph("facebook.tar.gz")
read.graph("facebook.tar")
facebook.tar <- read.table("~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/facebook.tar.gz", header=TRUE, quote="\"")
View(facebook.tar)
g = as.igraph("facebook.tar")
library(help="igraph")
View(`348.circles`)
View(`3437.egofeat`)
View(`348.edges`)
View(`348.edges`)
rm(list = ls())
library(igraph)
data <- list.files()
file = 'facebook/0.edges',
getwd
getwd()
sep=" ", header=F,
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
View(graph.edges)
graph.edges <- graph.edges - min(graph.edges) + 1
graph.nodes <- data.frame(
id=seq(max(graph.edges) - min(graph.edges) + 1))
graph.nodes$group <- 1
g <- graph.nodes$group <- 1
simplify(g)
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
rm(list = ls())
library(igraph)
graph.edges <- read.csv(file = '0.edges',
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
graph.edges <- read.csv(file = 'facebook/0.edges',
graph.edges <- read.csv(file = 'facebook\0.edges',
graph.edges <- read.csv(file = 'facebook\0.edges', sep=" ", header=FALSE, col.names=c("source", "target"))
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
graph.n$group <- 1
g = graph.data.frame(graph.edges, directed=TRUE, vertices=graph.nodes)
g = graph.data.frame(graph.edges, directed=TRUE, vertices=graph.nodes)
g2 = simplify(g)
plot(g2)
g = graph.data.frame(graph.e, directed=TRUE, vertices=graph.n)
g2 = simplify(g)
plot(g2)
V(g2)
V(g)
g = graph.data.frame(graph.e, directed=TRUE, vertices=graph.n)
V(g)
edges(g)
vertex_attr(g)
is.simple(g)
page_rank(g)
plot(page_rank(g))
alpha_centrality(g)
ac1 <- alpha_centrality(g)
ac1
degree(a)
degree(a, 1)
degree(a, 198)
degree(a, "198")
degree(g2, "198")
2
ac1
ac1 <- alpha_centrality(g2)
is.simple(g2)
V(g2)
degree(g2, "198")
degree(g2)
cliques(g2, min=8)
astrocollab <- upgrade_graph(g)
cliques(astrocollab, min=8)
plot(astrocollab)
centrality(g)
largest.cliques(g2)
bonpow(g2)
bonpow(g2, nodes = V(g2), loops = FALSE, exponent = 1, rescale = F, tol = 1e-07, sparse = T)
alpha.centrality(g2)
alpha_centrality(g2)
alpha_centrality(g)
ego(g2)
ego(g2, 0, 1:3)
ego(g2, 0, V(graph))
ego(g2, 0, V(g2))
ego(g2, 2, V(g2))
ego(g2, gorder(g), V(g2))
distance_table(g2)
dfs(g2)
dfs(g2, "0")
eccentricity(g2)
eigen_centrality(g2)
ealpha_centrality(g2)
alpha_centrality(g2)
bfs(g2)
bfs(g2, 1)
dfs(1)
dfs(g2, 1)
count_max_cliques(g2)
count_triangles(g2)
convex.hull(g2)
is.directed(g2)
is.weighted(g2)
is.connected(g2)
power_centrality(g2, nodes = V(g2), loops = FALSE, exponent = 1, rescale = F, tol = 1e-07, sparse = T)
power_centrality(g2, nodes = V(g2))
radius(g2)
closeness(g2)
count_multiple(g2)
is.simple(g2)
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
ego(g2, gorder(g), V(g2))
power_centrality(g2, nodes = V(g2))
count_multiple(g2)
ego(g2, gorder(g), V(g2))
largest.cliques(g2)
distance_table(g2)
alpha_centrality(g2)
ego(g2, gorder(g), V(g2))
power_centrality(g2, nodes = V(g2))
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
ego(g2, gorder(g), V(g2))
largest.cliques(g2)
largest.cliques(g2)
in_circle(g2)
in_circle(g2, gorder(g2))
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
components(g2)
is.connected(g2)
power_centrality(g2, nodes = V(g2))
rm(graph.e)
rm(graph.n)
power_centrality(g2, nodes = V(g2))
rm(graph.edges)
power_centrality(g2, nodes = V(g2))
distance_table(g2)
diameter(g2)
max(distance_table(g2))
distances(g2, algorithm = "dijkstra")
max(distances(g2, algorithm = "dijkstra"))
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
rm(list = ls())
graph.edges <- read.csv(file = 'facebook/0.edges', sep=" ", header=FALSE, col.names=c("source", "target"))
graph.e <- graph.edges - min(graph.edges) + 1
graph.n <- data.frame(id=seq(max(graph.e) - min(graph.e) + 1))
graph.n$group <- 1
g = graph.data.frame(graph.e, directed=FALSE, vertices=graph.n)
g2 = simplify(g)
power_centrality(g2, nodes = V(g2))
ego(g2, gorder(g), V(g2))
largest.cliques(g2)
max(distances(g2, algorithm = "dijkstra"))
alpha_centrality(g2)
is.directed(g2)
components(g2)
components(g2)$membership
max(distances(g2, V(components(g2)$membership),algorithm = "dijkstra"))
max(distances(g2, V(g2[components(g2)$membership]),algorithm = "dijkstra"))
max(distances(V(g2[components(g2)$membership]),algorithm = "dijkstra"))
max(distances(g2, unconnected=T, algorithm = "dijkstra"))
max(distances(g2, unconnected = TRUE, algorithm = "dijkstra"))
help(distances)
distances(g2, unconnected=TRUE)
distances(g2, v = components(g2)$membership)
max(distances(g2, v = components(g2)$membership))
distances(g2, v = components(g2)$membership)
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
decompose.graph(g2)
g2.1 <- decompose.graph(g2)[1]
distances(g2.1)
g2.1 <- which.max(sapply(decompose.graph(g2), vcount)
g2.1 <- which.max(sapply(decompose.graph(g2), vcount))
distances(g2.1)
source('~/College/Senior/Sem 1/Big Data and Analytics/Big-Data-Analytics/CLass-Project 1/Project1.R')
plot(g2)
plot(g2)
g = graph.data.frame(graph.e, directed=FALSE, vertices=graph.n)
graph.edges <- read.csv(file = 'facebook/0.edges', sep=" ", header=FALSE, col.names=c("source", "target"))
graph.e <- graph.edges - min(graph.edges) + 1
graph.n <- data.frame(id=seq(max(graph.e) - min(graph.e) + 1))
graph.n$group <- 1
g = graph.data.frame(graph.e, directed=FALSE, vertices=graph.n)
g2 = simplify(g)
plot(g2)
library(igraph)
g = graph.data.frame(graph.e, directed=FALSE, vertices=graph.n)
g2 = simplify(g)
plot(g2)
